#####################################################
# Camada Física da Computação
#Carareto
#11/08/2020
#AplicaçãoServer
####################################################


from aiohttp import Payload
from enlace import *
import time
import numpy as np

serialName = "COM7"                  # Windows(variacao de)



def main():
    try:

        com1 = enlace(serialName)

        com1.enable()
        print("Esperando 1 byte de sacrifício")        
        rxBuffer, nRx = com1.getData(1)
    
        com1.rx.clearBuffer()
        time.sleep(.1)
        print("----------------------------------------------------------")
        print("Recepcao aberta com sucesso! Vamos ao resto do projeto!")
        print("----------------------------------------------------------")
      
        
        #acesso aos bytes recebidos
        head, nRx = com1.getData(10)
        print(head[8])
        
        tp = head[1]
        
        pay, nRx = com1.getData(tp)
        print(pay)
        
        eop, nRX = com1.getData(4)
        
        pakage = head+pay+eop
        
        print(pakage)
        
        com1.sendData(pakage)
        print('Enviou')

        x =0
        while x < head[6]:
            pack_H, nRx = com1.getData(10)
            TP = head[1]
            pack_P, nRx = com1.getData(TP)
            pack_E, nRx = com1.getData(4)

            img = img + pack_P

            time.sleep(5)


            x+=1
        
        # Encerra comunicação
        print("-------------------------")
        print("Comunicação encerrada")
        print("-------------------------")
        com1.disable()
        
    except Exception as erro:
        print("ops! :-\\")
        print(erro)
        com1.disable()
        

    #so roda o main quando for executado do terminal ... se for chamado dentro de outro modulo nao roda
if __name__ == "__main__":
    main()
